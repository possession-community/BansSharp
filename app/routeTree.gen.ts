/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppAboutImport } from './routes/_app/about'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as errors400Import } from './routes/(errors)/400'
import { Route as AppadminRouteImport } from './routes/_app/(admin)/route'
import { Route as AppViolationsIndexImport } from './routes/_app/violations/index'
import { Route as AppadminSimpleAdminRouteImport } from './routes/_app/(admin)/simple-admin/route'
import { Route as AppadminSettingsRouteImport } from './routes/_app/(admin)/settings/route'
import { Route as AppadminSimpleAdminIndexImport } from './routes/_app/(admin)/simple-admin/index'
import { Route as AppadminSettingsIndexImport } from './routes/_app/(admin)/settings/index'
import { Route as AppadminSimpleAdminWarnsIndexImport } from './routes/_app/(admin)/simple-admin/warns/index'
import { Route as AppadminSimpleAdminMutesIndexImport } from './routes/_app/(admin)/simple-admin/mutes/index'
import { Route as AppadminSimpleAdminGroupsIndexImport } from './routes/_app/(admin)/simple-admin/groups/index'
import { Route as AppadminSimpleAdminBansIndexImport } from './routes/_app/(admin)/simple-admin/bans/index'
import { Route as AppadminSimpleAdminAdminsIndexImport } from './routes/_app/(admin)/simple-admin/admins/index'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAboutRoute = AppAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppRouteRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const errors400Route = errors400Import.update({
  id: '/(errors)/400',
  path: '/400',
  getParentRoute: () => rootRoute,
} as any)

const AppadminRouteRoute = AppadminRouteImport.update({
  id: '/(admin)',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppViolationsIndexRoute = AppViolationsIndexImport.update({
  id: '/violations/',
  path: '/violations/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppadminSimpleAdminRouteRoute = AppadminSimpleAdminRouteImport.update({
  id: '/simple-admin',
  path: '/simple-admin',
  getParentRoute: () => AppadminRouteRoute,
} as any)

const AppadminSettingsRouteRoute = AppadminSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppadminRouteRoute,
} as any)

const AppadminSimpleAdminIndexRoute = AppadminSimpleAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppadminSimpleAdminRouteRoute,
} as any)

const AppadminSettingsIndexRoute = AppadminSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppadminSettingsRouteRoute,
} as any)

const AppadminSimpleAdminWarnsIndexRoute =
  AppadminSimpleAdminWarnsIndexImport.update({
    id: '/warns/',
    path: '/warns/',
    getParentRoute: () => AppadminSimpleAdminRouteRoute,
  } as any)

const AppadminSimpleAdminMutesIndexRoute =
  AppadminSimpleAdminMutesIndexImport.update({
    id: '/mutes/',
    path: '/mutes/',
    getParentRoute: () => AppadminSimpleAdminRouteRoute,
  } as any)

const AppadminSimpleAdminGroupsIndexRoute =
  AppadminSimpleAdminGroupsIndexImport.update({
    id: '/groups/',
    path: '/groups/',
    getParentRoute: () => AppadminSimpleAdminRouteRoute,
  } as any)

const AppadminSimpleAdminBansIndexRoute =
  AppadminSimpleAdminBansIndexImport.update({
    id: '/bans/',
    path: '/bans/',
    getParentRoute: () => AppadminSimpleAdminRouteRoute,
  } as any)

const AppadminSimpleAdminAdminsIndexRoute =
  AppadminSimpleAdminAdminsIndexImport.update({
    id: '/admins/',
    path: '/admins/',
    getParentRoute: () => AppadminSimpleAdminRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/(admin)': {
      id: '/_app/(admin)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppadminRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/(errors)/400': {
      id: '/(errors)/400'
      path: '/400'
      fullPath: '/400'
      preLoaderRoute: typeof errors400Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/(admin)/settings': {
      id: '/_app/(admin)/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppadminSettingsRouteImport
      parentRoute: typeof AppadminRouteImport
    }
    '/_app/(admin)/simple-admin': {
      id: '/_app/(admin)/simple-admin'
      path: '/simple-admin'
      fullPath: '/simple-admin'
      preLoaderRoute: typeof AppadminSimpleAdminRouteImport
      parentRoute: typeof AppadminRouteImport
    }
    '/_app/violations/': {
      id: '/_app/violations/'
      path: '/violations'
      fullPath: '/violations'
      preLoaderRoute: typeof AppViolationsIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/(admin)/settings/': {
      id: '/_app/(admin)/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AppadminSettingsIndexImport
      parentRoute: typeof AppadminSettingsRouteImport
    }
    '/_app/(admin)/simple-admin/': {
      id: '/_app/(admin)/simple-admin/'
      path: '/'
      fullPath: '/simple-admin/'
      preLoaderRoute: typeof AppadminSimpleAdminIndexImport
      parentRoute: typeof AppadminSimpleAdminRouteImport
    }
    '/_app/(admin)/simple-admin/admins/': {
      id: '/_app/(admin)/simple-admin/admins/'
      path: '/admins'
      fullPath: '/simple-admin/admins'
      preLoaderRoute: typeof AppadminSimpleAdminAdminsIndexImport
      parentRoute: typeof AppadminSimpleAdminRouteImport
    }
    '/_app/(admin)/simple-admin/bans/': {
      id: '/_app/(admin)/simple-admin/bans/'
      path: '/bans'
      fullPath: '/simple-admin/bans'
      preLoaderRoute: typeof AppadminSimpleAdminBansIndexImport
      parentRoute: typeof AppadminSimpleAdminRouteImport
    }
    '/_app/(admin)/simple-admin/groups/': {
      id: '/_app/(admin)/simple-admin/groups/'
      path: '/groups'
      fullPath: '/simple-admin/groups'
      preLoaderRoute: typeof AppadminSimpleAdminGroupsIndexImport
      parentRoute: typeof AppadminSimpleAdminRouteImport
    }
    '/_app/(admin)/simple-admin/mutes/': {
      id: '/_app/(admin)/simple-admin/mutes/'
      path: '/mutes'
      fullPath: '/simple-admin/mutes'
      preLoaderRoute: typeof AppadminSimpleAdminMutesIndexImport
      parentRoute: typeof AppadminSimpleAdminRouteImport
    }
    '/_app/(admin)/simple-admin/warns/': {
      id: '/_app/(admin)/simple-admin/warns/'
      path: '/warns'
      fullPath: '/simple-admin/warns'
      preLoaderRoute: typeof AppadminSimpleAdminWarnsIndexImport
      parentRoute: typeof AppadminSimpleAdminRouteImport
    }
  }
}

// Create and export the route tree

interface AppadminSettingsRouteRouteChildren {
  AppadminSettingsIndexRoute: typeof AppadminSettingsIndexRoute
}

const AppadminSettingsRouteRouteChildren: AppadminSettingsRouteRouteChildren = {
  AppadminSettingsIndexRoute: AppadminSettingsIndexRoute,
}

const AppadminSettingsRouteRouteWithChildren =
  AppadminSettingsRouteRoute._addFileChildren(
    AppadminSettingsRouteRouteChildren,
  )

interface AppadminSimpleAdminRouteRouteChildren {
  AppadminSimpleAdminIndexRoute: typeof AppadminSimpleAdminIndexRoute
  AppadminSimpleAdminAdminsIndexRoute: typeof AppadminSimpleAdminAdminsIndexRoute
  AppadminSimpleAdminBansIndexRoute: typeof AppadminSimpleAdminBansIndexRoute
  AppadminSimpleAdminGroupsIndexRoute: typeof AppadminSimpleAdminGroupsIndexRoute
  AppadminSimpleAdminMutesIndexRoute: typeof AppadminSimpleAdminMutesIndexRoute
  AppadminSimpleAdminWarnsIndexRoute: typeof AppadminSimpleAdminWarnsIndexRoute
}

const AppadminSimpleAdminRouteRouteChildren: AppadminSimpleAdminRouteRouteChildren =
  {
    AppadminSimpleAdminIndexRoute: AppadminSimpleAdminIndexRoute,
    AppadminSimpleAdminAdminsIndexRoute: AppadminSimpleAdminAdminsIndexRoute,
    AppadminSimpleAdminBansIndexRoute: AppadminSimpleAdminBansIndexRoute,
    AppadminSimpleAdminGroupsIndexRoute: AppadminSimpleAdminGroupsIndexRoute,
    AppadminSimpleAdminMutesIndexRoute: AppadminSimpleAdminMutesIndexRoute,
    AppadminSimpleAdminWarnsIndexRoute: AppadminSimpleAdminWarnsIndexRoute,
  }

const AppadminSimpleAdminRouteRouteWithChildren =
  AppadminSimpleAdminRouteRoute._addFileChildren(
    AppadminSimpleAdminRouteRouteChildren,
  )

interface AppadminRouteRouteChildren {
  AppadminSettingsRouteRoute: typeof AppadminSettingsRouteRouteWithChildren
  AppadminSimpleAdminRouteRoute: typeof AppadminSimpleAdminRouteRouteWithChildren
}

const AppadminRouteRouteChildren: AppadminRouteRouteChildren = {
  AppadminSettingsRouteRoute: AppadminSettingsRouteRouteWithChildren,
  AppadminSimpleAdminRouteRoute: AppadminSimpleAdminRouteRouteWithChildren,
}

const AppadminRouteRouteWithChildren = AppadminRouteRoute._addFileChildren(
  AppadminRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppadminRouteRoute: typeof AppadminRouteRouteWithChildren
  AppAboutRoute: typeof AppAboutRoute
  AppIndexRoute: typeof AppIndexRoute
  AppViolationsIndexRoute: typeof AppViolationsIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppadminRouteRoute: AppadminRouteRouteWithChildren,
  AppAboutRoute: AppAboutRoute,
  AppIndexRoute: AppIndexRoute,
  AppViolationsIndexRoute: AppViolationsIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/': typeof AppIndexRoute
  '/400': typeof errors400Route
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/about': typeof AppAboutRoute
  '/settings': typeof AppadminSettingsRouteRouteWithChildren
  '/simple-admin': typeof AppadminSimpleAdminRouteRouteWithChildren
  '/violations': typeof AppViolationsIndexRoute
  '/settings/': typeof AppadminSettingsIndexRoute
  '/simple-admin/': typeof AppadminSimpleAdminIndexRoute
  '/simple-admin/admins': typeof AppadminSimpleAdminAdminsIndexRoute
  '/simple-admin/bans': typeof AppadminSimpleAdminBansIndexRoute
  '/simple-admin/groups': typeof AppadminSimpleAdminGroupsIndexRoute
  '/simple-admin/mutes': typeof AppadminSimpleAdminMutesIndexRoute
  '/simple-admin/warns': typeof AppadminSimpleAdminWarnsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/400': typeof errors400Route
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/about': typeof AppAboutRoute
  '/violations': typeof AppViolationsIndexRoute
  '/settings': typeof AppadminSettingsIndexRoute
  '/simple-admin': typeof AppadminSimpleAdminIndexRoute
  '/simple-admin/admins': typeof AppadminSimpleAdminAdminsIndexRoute
  '/simple-admin/bans': typeof AppadminSimpleAdminBansIndexRoute
  '/simple-admin/groups': typeof AppadminSimpleAdminGroupsIndexRoute
  '/simple-admin/mutes': typeof AppadminSimpleAdminMutesIndexRoute
  '/simple-admin/warns': typeof AppadminSimpleAdminWarnsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_app/(admin)': typeof AppadminRouteRouteWithChildren
  '/(errors)/400': typeof errors400Route
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_app/about': typeof AppAboutRoute
  '/_app/': typeof AppIndexRoute
  '/_app/(admin)/settings': typeof AppadminSettingsRouteRouteWithChildren
  '/_app/(admin)/simple-admin': typeof AppadminSimpleAdminRouteRouteWithChildren
  '/_app/violations/': typeof AppViolationsIndexRoute
  '/_app/(admin)/settings/': typeof AppadminSettingsIndexRoute
  '/_app/(admin)/simple-admin/': typeof AppadminSimpleAdminIndexRoute
  '/_app/(admin)/simple-admin/admins/': typeof AppadminSimpleAdminAdminsIndexRoute
  '/_app/(admin)/simple-admin/bans/': typeof AppadminSimpleAdminBansIndexRoute
  '/_app/(admin)/simple-admin/groups/': typeof AppadminSimpleAdminGroupsIndexRoute
  '/_app/(admin)/simple-admin/mutes/': typeof AppadminSimpleAdminMutesIndexRoute
  '/_app/(admin)/simple-admin/warns/': typeof AppadminSimpleAdminWarnsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/400'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/about'
    | '/settings'
    | '/simple-admin'
    | '/violations'
    | '/settings/'
    | '/simple-admin/'
    | '/simple-admin/admins'
    | '/simple-admin/bans'
    | '/simple-admin/groups'
    | '/simple-admin/mutes'
    | '/simple-admin/warns'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/400'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/about'
    | '/violations'
    | '/settings'
    | '/simple-admin'
    | '/simple-admin/admins'
    | '/simple-admin/bans'
    | '/simple-admin/groups'
    | '/simple-admin/mutes'
    | '/simple-admin/warns'
  id:
    | '__root__'
    | '/_app'
    | '/_app/(admin)'
    | '/(errors)/400'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_app/about'
    | '/_app/'
    | '/_app/(admin)/settings'
    | '/_app/(admin)/simple-admin'
    | '/_app/violations/'
    | '/_app/(admin)/settings/'
    | '/_app/(admin)/simple-admin/'
    | '/_app/(admin)/simple-admin/admins/'
    | '/_app/(admin)/simple-admin/bans/'
    | '/_app/(admin)/simple-admin/groups/'
    | '/_app/(admin)/simple-admin/mutes/'
    | '/_app/(admin)/simple-admin/warns/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  errors400Route: typeof errors400Route
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  errors400Route: errors400Route,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/(errors)/400",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/(admin)",
        "/_app/about",
        "/_app/",
        "/_app/violations/"
      ]
    },
    "/_app/(admin)": {
      "filePath": "_app/(admin)/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/(admin)/settings",
        "/_app/(admin)/simple-admin"
      ]
    },
    "/(errors)/400": {
      "filePath": "(errors)/400.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/_app/about": {
      "filePath": "_app/about.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/(admin)/settings": {
      "filePath": "_app/(admin)/settings/route.tsx",
      "parent": "/_app/(admin)",
      "children": [
        "/_app/(admin)/settings/"
      ]
    },
    "/_app/(admin)/simple-admin": {
      "filePath": "_app/(admin)/simple-admin/route.tsx",
      "parent": "/_app/(admin)",
      "children": [
        "/_app/(admin)/simple-admin/",
        "/_app/(admin)/simple-admin/admins/",
        "/_app/(admin)/simple-admin/bans/",
        "/_app/(admin)/simple-admin/groups/",
        "/_app/(admin)/simple-admin/mutes/",
        "/_app/(admin)/simple-admin/warns/"
      ]
    },
    "/_app/violations/": {
      "filePath": "_app/violations/index.tsx",
      "parent": "/_app"
    },
    "/_app/(admin)/settings/": {
      "filePath": "_app/(admin)/settings/index.tsx",
      "parent": "/_app/(admin)/settings"
    },
    "/_app/(admin)/simple-admin/": {
      "filePath": "_app/(admin)/simple-admin/index.tsx",
      "parent": "/_app/(admin)/simple-admin"
    },
    "/_app/(admin)/simple-admin/admins/": {
      "filePath": "_app/(admin)/simple-admin/admins/index.tsx",
      "parent": "/_app/(admin)/simple-admin"
    },
    "/_app/(admin)/simple-admin/bans/": {
      "filePath": "_app/(admin)/simple-admin/bans/index.tsx",
      "parent": "/_app/(admin)/simple-admin"
    },
    "/_app/(admin)/simple-admin/groups/": {
      "filePath": "_app/(admin)/simple-admin/groups/index.tsx",
      "parent": "/_app/(admin)/simple-admin"
    },
    "/_app/(admin)/simple-admin/mutes/": {
      "filePath": "_app/(admin)/simple-admin/mutes/index.tsx",
      "parent": "/_app/(admin)/simple-admin"
    },
    "/_app/(admin)/simple-admin/warns/": {
      "filePath": "_app/(admin)/simple-admin/warns/index.tsx",
      "parent": "/_app/(admin)/simple-admin"
    }
  }
}
ROUTE_MANIFEST_END */
